{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SACA,MAAMC,EAAOC,SAASC,cAAc,SAEpC,IAAIC,EAAS,KACTC,EAAQ,KACRC,EAAO,KACPC,EAAgB,EAChBC,EAAWD,EAAgB,EA2B/BN,EAAKQ,iBAAiB,UA1BLC,IACfA,EAAEC,iBACFP,EAASQ,OAAOF,EAAEG,cAAcC,SAASC,OAAOC,OAChDX,EAAQO,OAAOF,EAAEG,cAAcC,SAASG,MAAMD,OAC9CV,EAAOM,OAAOF,EAAEG,cAAcC,SAASI,KAAKF,OAC5CG,YAAW,KACTC,aAAY,KACNb,IAAkBH,IAoB5B,SAAuBiB,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KACvBL,EACFI,EAAQ,CAAEE,SAAAR,EAAUJ,MAAAK,IAEpBM,EAAO,CAAEC,SAAAR,EAAUJ,MAAAK,GAAQ,G,CAvB3BQ,CAActB,EAAUH,GACrB0B,MAAK,EAAGF,SAAAG,EAAUf,MAAAgB,MACjBC,QAAQC,IAAI,uBAAqBH,QAAiBC,OAClDlC,EAAAqC,OAAOC,QAAQ,uBAAqBL,QAAiBC,MAAU,IAEhEK,OAAM,EAAGT,SAAAU,EAAUtB,MAAAuB,MAClBN,QAAQC,IAAI,sBAAoBI,QAAiBC,OACjDzC,EAAAqC,OAAOK,QAAQ,sBAAoBF,QAAeC,MAAU,IAEhEjC,GAAiB,EACjBC,EAAWD,EAAgB,EAC3BF,GAASC,EAAI,GACZA,EAAK,GACPD,GAeHE,EAAgB,EAChBC,EAAWD,EAAgB,CAfb","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nconst form = document.querySelector('.form');\n\nlet amount = null;\nlet delay = null;\nlet step = null;\nlet invokeCounter = 0;\nlet position = invokeCounter + 1;\nconst onSubmit = e => {\n  e.preventDefault();\n  amount = Number(e.currentTarget.elements.amount.value);\n  delay = Number(e.currentTarget.elements.delay.value);\n  step = Number(e.currentTarget.elements.step.value);\n  setTimeout(() => {\n    setInterval(() => {\n      if (invokeCounter === amount) {\n        return;\n      }\n      createPromise(position, delay)\n        .then(({ position, delay }) => {\n          console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n          Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n          Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n      invokeCounter += 1;\n      position = invokeCounter + 1;\n      delay += step;\n    }, step);\n  }, delay);\n  resetCounter();\n};\nform.addEventListener('submit', onSubmit);\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      resolve({ position, delay });\n    } else {\n      reject({ position, delay });\n    }\n  });\n};\nfunction resetCounter() {\n  invokeCounter = 0;\n  position = invokeCounter + 1;\n};\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$delay","$47d4ff9957288465$var$step","$47d4ff9957288465$var$invokeCounter","$47d4ff9957288465$var$position","addEventListener","e","preventDefault","Number","currentTarget","elements","amount","value","delay","step","setTimeout","setInterval","position3","delay3","shouldResolve","Math","random","Promise","resolve","reject","position","$47d4ff9957288465$var$createPromise","then","position1","delay1","console","log","Notify","success","catch","position2","delay2","failure"],"version":3,"file":"03-promises.8756cbc2.js.map"}